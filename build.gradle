import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'com.bmuschko.docker-remote-api' version '4.6.2'
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

group = 'com.github.dddpaul'
version = '2.1.1.RELEASE'
sourceCompatibility = JavaVersion.VERSION_11

ext {
    dockerPrefix = "dddpaul"
}

bootJar {
    mainClassName = 'org.springframework.cloud.config.server.ConfigServerApplication'
}

task dockerCreateFile(type: Dockerfile) {
    dependsOn bootJar
    destFile = file("${project.buildDir}/Dockerfile")
    from 'adoptopenjdk/openjdk11:jdk-11.0.2.9-alpine-slim'
    addFile "libs/${project.name}-${project.version}.jar", '/app.jar'
    volume '/config'
    exposePort 8888
    entryPoint 'java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar', '--spring.config.name=configserver'
}

task dockerBuildImage(type: DockerBuildImage) {
    dependsOn dockerCreateFile
    inputDir = file("${project.buildDir}")
    tags = [
            "${dockerPrefix}/${project.name}".toString(),
            "${dockerPrefix}/${project.name}:${project.version}".toString()
    ]
}

dependencies {
    compile 'org.springframework.cloud:spring-cloud-config-server:2.1.1.RELEASE'
}

wrapper {
    gradleVersion = '5.2.1'
    distributionUrl = 'https://services.gradle.org/distributions/gradle-5.2.1-bin.zip'
}
